const withAjax=!1,zenodoRecord="https://zenodo.org/record/",form=document.querySelector("form[name=simpleSearch]"),formButton=document.querySelector("button[name=simpleSearch]"),q=document.querySelector("input[name=q]"),urlFlagSelectors=document.querySelectorAll(".urlFlag"),communitiesSelector=document.querySelector(".drop-down"),communityCheckBoxes=document.querySelectorAll("input[name=communities]"),allCommunities=document.querySelector('input[value="all communities"]'),refreshCacheSelector=document.querySelector("input[name=refreshCache]"),refreshCacheWarning=document.querySelector("#refreshCacheWarning"),resourceSelector=document.querySelector("#resourceSelector"),figcaptionHeight="30px";let figcaptions=[];const modalToggle=document.querySelectorAll(".modal-toggle"),throbber=document.querySelector("#throbber"),charts=document.querySelector("#charts"),about=document.querySelector("#about"),privacy=document.querySelector("#privacy"),images=document.querySelector("#images"),carousel=document.querySelector("#carousel"),treatments=document.querySelector("#treatments"),treatment=document.querySelector("#treatment"),panels={throbber:throbber,about:about,privacy:privacy,images:images,carousel:carousel,treatments:treatments,treatment:treatment},tmplPager=document.querySelector("#templatePager").innerHTML,tmplRecordsFound=document.querySelector("#templateRecordsFound").innerHTML,tmplImages=document.querySelector("#templateImages").innerHTML,tmplCarousel=document.querySelector("#templateCarousel").innerHTML,tmplTreatments=document.querySelector("#templateTreatments").innerHTML,tmplTreatment=document.querySelector("#templateTreatment").innerHTML;Mustache.parse(tmplPager),Mustache.parse(tmplRecordsFound),Mustache.parse(tmplImages),Mustache.parse(tmplCarousel),Mustache.parse(tmplTreatments),Mustache.parse(tmplTreatment);const tmplPartials={templatePager:tmplPager,templateRecordsFound:tmplRecordsFound};let size=30;const DATA={charts:{statistics:{treatments:0,specimens:0,"male specimens":0,"female specimens":0,"treatments with specimens":0,"treatments with male specimens":0,"treatments with female specimens":0,images:0}},images:{recordsFound:45,from:1,to:30,figures:[{imgBlur:"",imgA:"",recId:"",title:"",zenodoRecord:""}],pager:{prev:0,next:31}},carousel:{visibility:"hide",figures:[{imgBlur:"",imgA:"",recId:"",title:"",zenodoRecord:""}]},treatments:{recordsFound:45,from:1,to:30,treatments:[{treatmentTitle:"",images:[{thumb50:"",imageTitle:""}],s:"",treatmentId:""}],pager:{prev:0,next:31}},treatment:{treatmentTitle:"",zenodeo:"",treatmentId:"",doi:"",zenodoDep:"",authorsList:"",journalYear:"",articleTitle:"",journalTitle:"",journalVolume:"",journalIssue:"",pages:"",taxonStats:{},mapState:"",figures:[{imgBlur:"",imgA:"",recId:"",title:"",zenodoRecord:""}],citations:[{citation:""}],xml:""}},map={url:"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}",attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets",accessToken:"pk.eyJ1IjoicHVua2lzaCIsImEiOiJjajhvOXY0dW8wMTA3MndvMzBlamlhaGZyIn0.3Ye8NRiiGyjJ1fud7VbtOA"},fetchReceive=function(response){if(!response.ok)throw new Error("HTTP error, status = "+response.status);return response.json()};function goGetIt(event){if(!location.search&&""===q.value)return setVisualElements("blank"),q.placeholder="c'mon, enter something",!1;{let qp;event?(event.preventDefault(),event.stopPropagation(),qp=urlConstruct(form)):location.search&&(qp=urlDeconstruct(location.search)),setVisualElements("queryStart"),fetchResource[qp.resource](qp)}}function isXml(s){return 32===s.length}function urlDeconstruct(s){"?"===s.substr(0,1)&&(s=s.substr(1));const qp={};return s.split("&").forEach(p=>{r=p.split("="),qp[r[0]]=r[1]}),qp.q&&(q.value=qp.q),qp}function urlConstruct(form){let queryParams={};const q=form.querySelector("input[name=q]").value;if(isXml(q)){queryParams.treatmentId=q,queryParams.resource="treatment",urlFlagSelectors.querySelector("input[name=refreshCache").checked&&(queryParams.refreshCache=!0)}else{queryParams.q=q;for(let i=0,j=urlFlagSelectors.length;i<j;i++){const element=urlFlagSelectors[i];element.checked&&(queryParams[element.name]=element.value)}"images"===queryParams.resource?(queryParams.page=form.querySelector("input[name=page]").value,queryParams.access_right="open",queryParams.type="image"):"treatments"===queryParams.resource&&(delete queryParams.communities,queryParams.id=form.querySelector("input[name=id]").value),queryParams.size=size}return queryParams}function goHome(){location.search="/"}function makeLayout(imagesOfRecords){let imgCount=0,figures=[];for(let record in imagesOfRecords){const images=imagesOfRecords[record].images;imgCount+=images.length;const recId=record.split("/").pop();let imgBlur,imgA_,imgA,imgB,imgC,imgD;"na"===imagesOfRecords[record].thumb250?imgBlur=imgA_=imgA=imgB=imgC=imgD="img/kein-preview.png":(imgBlur=(imgA=imagesOfRecords[record].thumb250).replace("250","10"),imgA_=imgA.replace("250","50"),imgB=imgA.replace("250,","400,"),imgC=imgA.replace("250,","960,"),imgD=imgA.replace("250,","1200,"));const figure={title:imagesOfRecords[record].title,creators:imagesOfRecords[record].creators,recId:recId,zenodoRecord:zenodoRecord+recId,imageSrc:images[0],imgBlur:imgBlur,imgA:imgA,imgA_:imgA_,imgB:imgB,imgC:imgC,imgD:imgD};figures.push(figure)}return[figures,imgCount]}function niceNumbers(num){return num<10?["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"][num]:num}let savedVisualState,saveableVisualStates=["treatments","treatment","images"];function setVisualElements(state){const hideEverything=function(obj){const{except:except,resetRefreshCache:resetRefreshCache}=obj;console.log(`hiding everything except ${except.join(", ")}`),savedVisualState&&except.push(savedVisualState);for(const p in panels){const panel=panels[p];except.indexOf(p)>-1?(panel.classList.remove("hidden-panel"),panel.classList.add("visible-panel")):(panel.classList.contains("visible-panel")&&saveableVisualStates.indexOf(p)>-1&&(savedVisualState=p),panel.classList.remove("visible-panel"),panel.classList.add("hidden-panel"))}resetRefreshCache&&(refreshCacheSelector.checked=!1)};"treatments"===state?hideEverything({except:["treatments"],resetRefreshCache:!1}):"about-open"===state?hideEverything({except:["about"],resetRefreshCache:!1}):"about-close"===state?hideEverything({except:["treatments"],resetRefreshCache:!1}):"privacy-open"===state?hideEverything({except:["privacy"],resetRefreshCache:!1}):"privacy-close"===state?hideEverything({except:["treatments"],resetRefreshCache:!1}):"queryStart"===state?hideEverything({except:["throbber"],resetRefreshCache:!0}):"queryEndNoResult"===state?hideEverything({except:["treatments"],resetRefreshCache:!0}):"queryEndWithTreatments"===state?hideEverything({except:["treatments"],resetRefreshCache:!0}):"queryEndWithTreatment"===state?hideEverything({except:["treatment"],resetRefreshCache:!0}):"queryEndWithImages"===state?hideEverything({except:["images","charts"],resetRefreshCache:!0}):"turnCarouselOn"===state?hideEverything({except:["carousel"],resetRefreshCache:!0}):"turnCarouselOff"===state&&hideEverything({except:["images","charts"],resetRefreshCache:!0})}function makeUris(qp,setHistory=!0){let hrefArray1=[],hrefArray2=[];for(let p in qp)"resource"!==p&&hrefArray1.push(p+"="+qp[p]),"refreshCache"!==p&&hrefArray2.push(p+"="+qp[p]);const uri=`${zenodeo}/v2/${qp.resource}?${hrefArray1.join("&")}`,search=hrefArray2.join("&");return setHistory&&history.pushState("","",`?${hrefArray2.join("&")}`),{search:search,uri:uri}}function makeMap(mcs){const mcmap=L.map("map",{center:[0,0],zoom:8,scrollWheelZoom:!1});L.tileLayer(map.url,{attribution:map.attribution,maxZoom:18,id:map.id,accessToken:map.accessToken}).addTo(mcmap);const markers=[];mcs.forEach(mc=>{if(mc.latitude&&mc.longitude){const marker=L.marker([mc.latitude,mc.longitude]).addTo(mcmap);marker.bindPopup(mc.typeStatus),markers.push(marker)}});const bounds=new L.featureGroup(markers).getBounds();mcmap.fitBounds(bounds)}function makePager(data,search,page){if(data.recordsFound&&data.recordsFound>=size)if(page){let prev="page=",next="page=";prev+=1===page?1:page-1,next+=parseInt(page)+1,data.prev="?"+search.replace(/page=\d+/,prev),data.next="?"+search.replace(/page=\d+/,next)}else{let prev="id="+data.previd,next="id="+data.nextid;""!==data.previd?search.indexOf("id")>-1?data.prev="?"+search.replace(/id=\d+/,prev):data.prev=`?${search}&${prev}`:data.prev="",""!==data.nextid?search.indexOf("id")>-1?data.next="?"+search.replace(/id=\d+/,next):data.next=`?${search}&${next}`:data.next=""}return data.pager=!0,data}function submitReporter(event){const form=event.target.parentElement,widget=form.parentElement,report=widget.querySelector(".report"),reporter=form.querySelector(".imageReport"),recId=form.querySelector('input[name="recId"]').value,status=widget.querySelector(".status"),payload=JSON.stringify({title:`problem with record id: ${recId}`,body:reporter.innerText,assignee:"myrmoteras",milestone:1,labels:["images"]}),headers=[{k:"Content-type",v:"application/json"},{k:"Authorization",v:"Basic "+btoa("blruser:xucqE5-tezmab-ruqgyr")}];x("POST","https://api.github.com/repos/plazi/Biodiversity-Literature-Repository/issues",function(){form.style.visibility="hidden",status.innerHTML="Thank you for submitting the report!",status.style.visibility="visible",status.style.display="block",setInterval(function(){status.style.visibility="hidden",status.style.display="none",report.style.visibility="visible"},3e3)},headers,payload),event.preventDefault(),event.stopPropagation()}function toggleReporter(event){const r=event.target;r.parentElement.querySelector("form").style.visibility="visible",r.style.visibility="hidden",event.preventDefault(),event.stopPropagation()}function cancelReporter(event){const f=event.target.parentElement,r=f.parentElement.querySelector(".report");f.style.visibility="hidden",r.style.visibility="visible",event.preventDefault(),event.stopPropagation()}const fetchResource={stats:function(qp){const setPlaceHolderMessage=function(resource){q.placeholder=`search ${DATA.charts.statistics[resource]} ${resource}`};if(0===DATA.charts.statistics[qp.resource]){const{search:search,uri:uri}=makeUris(qp,!1);fetch(uri).then(fetchReceive).then(function(xh){for(let k in xh.value)DATA.charts.statistics[k]=xh.value[k];setPlaceHolderMessage(qp.resource),treatments.innerHTML=Mustache.render(tmplTreatments,{}),chart=statsChart(),setVisualElements("treatments")})}else setPlaceHolderMessage(qp.resource),chart=statsChart()},treatments:function(qp){const{search:search,uri:uri}=makeUris(qp);qp.treatmentId?(console.log("getting a single treatment "+qp.treatmentId),fetch(uri).then(fetchReceive).then(function(xh){if(DATA.treatment=xh.value,"xml"===qp.format)return DATA.treatment;if(DATA.treatment.imgCount=niceNumbers(xh.value.imgCount),DATA.treatment.zenodeo=zenodeo,DATA.treatment.materialsCitations.length&&(DATA.treatment.mapState="open"),treatment.innerHTML=Mustache.render(tmplTreatment,DATA.treatment),setVisualElements("queryEndWithTreatment"),"Zero"!==xh.value.imgCount){const figs=document.querySelectorAll("figcaption > a");for(let i=0,j=figs.length;i<j;i++)figs[i].addEventListener("click",toggleFigcaption)}DATA.treatment.materialsCitations.length&&(document.querySelector("#map").classList.add("show"),makeMap(DATA.treatment.materialsCitations))})):(console.log("getting many treatments"),fetch(uri).then(fetchReceive).then(function(xh){DATA.treatments.resource="treatments";const qryCols=Object.keys(xh.value.whereCondition),qryVals=Object.values(xh.value.whereCondition);let i=0;const j=qryCols.length;if(DATA.treatments.whereCondition="",1===j)"text"===qryCols[0]?DATA.treatments.whereCondition=`<span class='qryVal'>${qryVals[i]}</span> is in the text`:DATA.treatments.whereCondition=`<span class='qryCol'>${qryCols[i]}</span> is <span class='qryVal'>${qryVals[i]}</span>`;else if(2===j)DATA.treatments.whereCondition=`<span class='qryCol'>${qryCols[0]}</span> is <span class='qryVal'>${qryVals[0]}</span> and <span class='qryCol'>${qryCols[1]}</span> is <span class='qryVal'>${qryVals[1]}</span>`;else for(;i<j;i++)DATA.treatments.whereCondition+=i==j-1?`and <span class='qryCol'>${qryCols[i]}</span> is <span class='qryVal'>${qryVals[i]}</span>`:`<span class='qryCol'>${qryCols[i]}</span> is <span class='qryVal'>${qryVals[i]}</span>, `;if(xh.value.recordsFound){DATA.treatments.successful=!0,DATA.treatments.recordsFound=niceNumbers(xh.value.recordsFound),DATA.treatments.from=xh.value.from,DATA.treatments.to=xh.value.to,DATA.treatments.treatments=xh.value.treatments,DATA.treatments.previd=xh.value.previd,DATA.treatments.nextid=xh.value.nextid,DATA.treatments=makePager(DATA.treatments,search),treatments.innerHTML=Mustache.render(tmplTreatments,DATA.treatments,tmplPartials),setVisualElements("queryEndWithTreatments");for(let k in xh.value.statistics)DATA.charts.statistics[k]=xh.value.statistics[k];chart=statsChart()}else DATA.treatments.successful=!1,DATA.treatments.recordsFound="No",treatments.innerHTML=Mustache.render(tmplTreatments,DATA.treatments,tmplPartials),setVisualElements("queryEndNoResult")}))},images:function(qp){const{search:search,uri:uri}=makeUris(qp);fetch(uri).then(fetchReceive).then(function(xh){const{total:total,imagesOfRecords:imagesOfRecords}=xh.value;DATA.images.recordsFound=total,[DATA.images.figures,DATA.images.imagesFound]=makeLayout(imagesOfRecords),DATA.images=makePager(DATA.images,search,qp.page),DATA.images.recordsFound=niceNumbers(data.recordsFound),images.innerHTML=Mustache.render(tmplImages,DATA.images,tmplPartials),setVisualElements("queryEndWithResult");const figs=document.querySelectorAll("figcaption > a");for(let i=0,j=figs.length;i<j;i++)figs[i].addEventListener("click",toggleFigcaption);const carousel=document.querySelectorAll(".carousel");for(let i=0,j=carousel.length;i<j;i++)carousel[i].addEventListener("click",function(event){turnCarouselOn(DATA.images,DATA.images.figures[i].recId)})})}},toggleRefreshCache=function(event){refreshCacheWarning.classList.toggle("show")},chooseUrlFlags=function(element){if("communities"===element.name)if("all communities"===element.value)if(!0===element.checked)for(let i=0,j=communityCheckBoxes.length;i<j;i++)communityCheckBoxes[i].checked=!0;else for(let i=0,j=communityCheckBoxes.length;i<j;i++)"all communities"!==communityCheckBoxes[i].value&&(communityCheckBoxes[i].checked=!1);else allCommunities.checked=!1;else if("resource"===element.name){const rtLabels=resourceSelector.querySelectorAll("label"),rtInputs=resourceSelector.querySelectorAll("input");for(let i=0;i<rtLabels.length;i++)element.value===rtInputs[i].value?(rtLabels[i].classList.add("searchFocus"),getStats(rtInputs[i].value)):rtLabels[i].classList.remove("searchFocus")}else"refreshCache"===element.name&&(element.value=element.checked)},toggleCommunities=function(event){communitiesSelector.classList.toggle("open")},suggest=function(field){new autoComplete({selector:field,minChars:3,source:function(term,response){try{fetch.abort()}catch(e){}fetch(`${zenodeo}/v2/families?q=${term}`).then(fetchReceive).then(response)}})},toggleFigcaption=function(event){0==figcaptions.length&&(figcaptions=document.querySelectorAll("figcaption"),figcaptionLength=figcaptions.length);let fc=this.parentElement.style.maxHeight;if("30px"===fc||""===fc){let i=0;for(;i<figcaptionLength;i++)figcaptions[i].style.maxHeight="30px";this.parentElement.style.maxHeight="100%",this.parentElement.style.overflow="auto"}else this.parentElement.style.maxHeight="30px",this.parentElement.style.overflow="hidden"},activateUrlFlagSelectors=function(){for(let i=0,j=urlFlagSelectors.length;i<j;i++){const element=urlFlagSelectors[i];element.addEventListener("click",function(event){chooseUrlFlags(element),"communities"===element.name&&communitiesSelector.classList.remove("open")})}},turnCarouselOn=function(data,recId){carousel.innerHTML=Mustache.render(tmplCarousel,data),setVisualElements("turnCarouselOn");const carouselOff=document.querySelectorAll(".carouselOff");for(let i=0,j=carouselOff.length;i<j;i++)carouselOff[i].addEventListener("click",turnCarouselOff);const newhash="#"+recId;history.pushState?history.pushState(null,null,newhash):location.hash=newhash},turnCarouselOff=function(event){setVisualElements("turnCarouselOff")},getStats=function(resource){fetchResource.stats({resource:resource,stats:!0})},statsChart=function(){return new Chart(chart,{type:"bar",data:{labels:Object.keys(DATA.charts.statistics),datasets:[{label:"statistics",data:Object.values(DATA.charts.statistics),datalabels:{color:"#000000"},backgroundColor:"#ff0000",borderWidth:1}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0}}],xAxes:[{scaleLabel:{fontSize:8}}]},responsive:!0,tooltips:{enabled:!1},legend:{display:!1}}})},modalToggleFunc=function(event){event.preventDefault(),event.stopPropagation(),setVisualElements(this.id)};communitiesSelector.addEventListener("click",toggleCommunities),refreshCacheSelector.addEventListener("click",toggleRefreshCache),suggest(q),activateUrlFlagSelectors();for(let i=0,j=modalToggle.length;i<j;i++)modalToggle[i].addEventListener("click",modalToggleFunc);location.search?goGetIt():(fetchResource.stats({resource:"treatments",stats:!0}),q.focus());